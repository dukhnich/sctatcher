{"version":3,"sources":["services/Sizes/reducer.js","services/Sizes/index.js","components/Spine.js","components/SpineCharacter.js","components/Game/Background.js","components/StartBanner/BannerHeader.js","components/StartBanner/ButtonText.js","consts.js","services/CurrentGame/reducer.js","store/root-reducer.js","store/configure-store.js","services/CurrentGame/actions.js","components/StartBanner/BannerButton.js","components/StartBanner/StartBanner.js","components/Game/CardSymbol.js","components/Mask.js","components/Game/Bonus/ScratchFrameBig.js","components/Game/Bonus/Bonus.js","components/Game/Character.js","components/Game/PlayingBoard/BoardHeader/BoardText.js","components/Game/PlayingBoard/BoardHeader/BoardHeader.js","components/Game/PlayingBoard/Set/ScratchFrame.js","components/Game/PlayingBoard/Set/Set.js","components/Game/PlayingBoard/PlayingBoard.js","components/Game/GameHeader.js","components/WinBanner/WinText.js","components/WinBanner/CurrencySymbol.js","components/WinBanner/SetValues.js","components/WinBanner/WinBanner.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["initialState","scale","widthBg","heightBg","widthScreen","window","innerWidth","heightScreen","innerHeight","status","sizesReducer","state","action","type","payload","PIXI","require","SpineAnimation","CustomPIXIComponent","customDisplayObject","props","spine","Spine","spineData","connect","sizes","dispatch","app","React","useState","setSpineData","loader","res","spineCharacter","useEffect","add","load","stage","getChildAt","name","setAnimation","x","screen","width","y","height","texture","from","currentGame","baseTexture","devicePixelRatio","renderer","children","WHITE","tint","alpha","visible","style","fill","fontFamily","fontSize","BannerHeader","setX","ref","useRef","current","container","text","ButtonText","setY","wrapper","SUITS","getPngName","MAINRULES","suit","cardNumbersProperties","win","probability","coin","reduce","prev","i","length","numbersOfCards","BONUSRULES","dollar","statusCharacter","open","bonus","set","bonusSet","mainSet","currentGameReducer","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","pick","outcomesArr","totalProbs","dice","Math","random","currentSum","createSet","winSuit","winNumber","allSuits","suits","push","mixSet","position","floor","splice","changeCardStatus","number","a","newOpen","getState","Object","values","prevCard","isOpen","buttonMode","interactive","pointerup","game","CardSymbol","card","setSuit","symbol","on","pivot","drawRectangle","g","clear","beginFill","drawRect","endFill","drawBrush","r","drawCircle","Mask","draw","mask","customApplyProps","instance","oldProps","frame","dragging","setDragging","brush","setBrush","pointerMove","event","data","global","setTimeout","pointerdown","pointermove","setContainer","getChildByName","setCurrent","firstText","setText1","secondText","setText2","suitSymbol","setSymbol","text1","text2","scratch","textureBg","bg","setBg","map","index","key","headerWidth","WinText","CurrencySymbol","textureDollar","bonusWin","setWin","w","wins","finalWin","entries","currency","value","countWin","setDollar","setCoin","currency1","currency2","banner","t","setW","tDollar","spineStatus","OPTIONS","backgroundColor","resolution","Main","pending","setPending","App","options","Consumer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kHAAMA,EAAe,CACjBC,MAAO,IACPC,QAAS,EACTC,SAAU,EACVC,YAAaC,OAAOC,WACpBC,aAAcF,OAAOG,YACrBC,OAAQ,QAqBGC,IAlBM,WAAmC,IAAlCC,EAAiC,uDAAzBX,EAAcY,EAAW,uCACnD,OAAQA,EAAOC,MACX,IAAK,iBACD,OAAO,2BACAF,GACAC,EAAOE,SAElB,IAAK,kBAED,OAAO,2BACAH,GADP,IAEIF,OAAQG,EAAOE,UAEvB,QACI,OAAOH,K,mDCvBnB,kE,gLCEAN,OAAOU,KAAOA,EACdC,EAAQ,IACD,IAAMC,EAAiBC,8BAAoB,CAC9CC,oBAD8C,SAC1BC,GAChB,OAAO,IAAIf,OAAOU,KAAKM,MAAMC,MAAMF,EAAMC,MAAME,aAGnD,SCFJlB,OAAOU,KAAOA,EACdC,EAAQ,IAsCR,IAOeQ,eAPS,SAACb,GACrB,MAAO,CACHV,MAAOU,EAAMc,MAAMxB,MACnBQ,OAAQE,EAAMc,MAAMhB,UAIbe,EA3Cf,YAAyD,IAAhCvB,EAA+B,EAA/BA,MAAOyB,EAAwB,EAAxBA,SAAUjB,EAAc,EAAdA,OAAQkB,EAAM,EAANA,IAAM,EAClBC,IAAMC,SAAS,MADG,mBAC7CN,EAD6C,KAClCO,EADkC,KAGpD,SAASC,EAAOA,EAAQC,GACpBF,EAAaE,EAAIC,gBACjBP,EAAS,CAACb,KAAM,kBAAmBC,QAAS,aAehD,OAZAc,IAAMM,WAAU,WACG,aAAXzB,EACAkB,EAAII,OACCI,IAAI,iBAAkB,kCACtBC,KAAKL,IAGVJ,EAAIU,MAAMC,WAAW,GAAGC,KAAO,iBAC/BZ,EAAIU,MAAMC,WAAW,GAAG3B,MAAM6B,aAAa,EAAG,qCAAqC,MAEzF,CAAC/B,IAEe,aAAXA,EACH,kBAACQ,EAAD,CACII,MAASE,EACTkB,EAAId,EAAIe,OAAOC,MAAQ,EACvBC,EAAKjB,EAAIe,OAAOG,OAAS,EACzB5C,MAASA,IAIX,kBAAC,YAAD,SCjCJ6C,EAAU/B,UAAagC,KADlB,+BAuCX,IAQevB,eARS,SAACb,GACrB,MAAO,CACHF,OAAQE,EAAMqC,YAAYvC,OAC1BR,MAAOU,EAAMc,MAAMxB,MACnBM,aAAcI,EAAMc,MAAMlB,gBAInBiB,EA5Cf,YAAwE,IAAnDf,EAAkD,EAAlDA,OAAQR,EAA0C,EAA1CA,MAAOyB,EAAmC,EAAnCA,SAAUnB,EAAyB,EAAzBA,aAAiBa,EAAQ,4DAK7DuB,EAAQG,EAAQG,YAAYN,MAC5BE,EAASC,EAAQG,YAAYJ,OASnC,OARAnB,EAAS,CAAEb,KAAM,iBAAkBC,QAAS,CACpCZ,QAASyC,EACTxC,SAAU0C,EACV5C,MAAQM,GAAgBF,OAAO6C,kBAAoB,GAAIL,KAO/D,kBAAC,SAAD,CACI5C,MAASA,EACT6C,QAASA,EACTL,GAAIrB,EAAMO,IAAIwB,SAAST,OAAOC,MAAQA,EAAM1C,GAAO,EACnD2C,GAAIxB,EAAMO,IAAIwB,SAAST,OAAOG,OAASA,EAAO5C,GAAO,GAEpDmB,EAAMgC,SACP,kBAAC,SAAD,CACIN,QAAS/B,UAAasC,MACtBV,MAAQA,EACRE,OAAUA,EACVS,KAAQ,EACRC,MAAO,GACPC,QAAS,SAAW/C,GAAU,WAAaA,QChCjDgD,EAAQ,IAAI1C,YAAe,CAC7B2C,KAAM,UACNC,WAAY,kBACZC,SAJa,KAOXd,EAAU/B,UAAagC,KADZ,0CA6BFc,MA1Bf,SAAsBzC,GAAQ,IAAD,EACHQ,IAAMC,SAAS,GADZ,mBAClBc,EADkB,KACXmB,EADW,KAEnBC,EAAMnC,IAAMoC,SAOlB,OALApC,IAAMM,WAAU,WACR4B,EAAKC,EAAIE,QAAQtB,SAEpB,IAGD,kBAAC,YAAD,CACIoB,IAAOA,EACPtB,GAAIrB,EAAM8C,UAAUjB,YAAYN,MAAQA,GAAO,EAC/CC,EAAsC,IAAnCxB,EAAM8C,UAAUjB,YAAYJ,QAE/B,kBAAC,SAAD,CAAQC,QAASA,IACjB,kBAAC,OAAD,CACIW,MAAQA,EACRU,KAAK,cACL1B,EAA+B,IAA1BK,EAAQG,YAAYN,MACzBC,GAAME,EAAQG,YAAYJ,OA7BzB,IA6B4C,MC5BvDY,EAAQ,IAAI1C,YAAe,CAC7B2C,KAAM,UACNC,WAAY,kBACZC,SAJa,KAOXd,EAAU/B,UAAagC,KADhB,4CCsLb,IDjJeqB,MAlCf,SAAoBhD,GAAQ,IAAD,EACDQ,IAAMC,SAAS,GADd,mBAChBc,EADgB,KACTmB,EADS,OAEAlC,IAAMC,SAAS,GAFf,mBAEhBgB,EAFgB,KAERwB,EAFQ,KAGjBC,EAAU1C,IAAMoC,SAChBG,EAAOvC,IAAMoC,SAWnB,OARApC,IAAMM,WAAU,WAER4B,EAAKQ,EAAQL,QAAQtB,OACrB0B,EAAKC,EAAQL,QAAQpB,UAGxB,IAGD,kBAAC,YAAD,CACIkB,IAAOO,EACP7B,GAAIrB,EAAM8C,UAAUjB,YAAYN,MAAQA,GAAO,EAC/CC,GAAIxB,EAAM8C,UAAUjB,YAAYJ,OAASA,GAAQ,GAEjD,kBAAC,OAAD,CACIkB,IAAOI,EACPV,MAAQA,EACRU,KAAK,cACLvB,GAAME,EAAQG,YAAYJ,OAlCzB,GAkC2C,KAAK,IAErD,kBAAC,SAAD,CACIJ,EAAK0B,EAAKF,QAAUE,EAAKF,QAAQtB,MAAQ,GAAK,EAC9CG,QAASA,M,OC3CZyB,EAAQ,CAAC,UAAW,MAAO,OAAQ,OAAQ,QAI3CC,EAAa,SAACjC,GAAD,qCAAkCA,EAAlC,SAEbkC,EAAY,CACrB,CACIC,KAAMH,EAAM,GACZI,sBAAsB,CAClB,CACIC,IAAK,GACLC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,CACAE,KAAM,IAEVD,YAAa,IAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,KAIzB,CACIH,KAAMH,EAAM,GACZI,sBAAsB,CAClB,CACIC,IAAK,GACLC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,CACAE,KAAM,IAEVD,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,KAIzB,CACIH,KAAMH,EAAM,GACZI,sBAAsB,CAClB,CACIC,IAAK,GACLC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,CACAE,KAAM,IAEVD,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,KAIzB,CACIH,KAAMH,EAAM,GACZI,sBAAsB,CAClB,CACIC,IAAK,GACLC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,CACAE,KAAM,IAEVD,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,KAIzB,CACIH,KAAMH,EAAM,GACZI,sBAAsB,CAClB,CACIC,IAAK,GACLC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,CACAE,KAAM,IAEVD,YAAa,IAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,KAGvB,CACEH,KAAMH,EAAM,GACZI,sBAAsB,CAClB,CACIC,IAAK,GACLC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,CACAE,KAAM,KAEVD,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,GAEjB,CACID,IAAI,GACJC,YAAa,MAK7B,MAAmBJ,EAAnB,eAA8B,CAAzB,IAAMC,EAAI,KACXA,EAAKG,YAAcH,EAAKC,sBAAsBI,QAAO,SAACC,EAAMf,GAAP,OAAmBe,EAAOf,EAAQY,cAAY,GACnG,IAAK,IAAII,EAAI,EAAGA,EAAIP,EAAKC,sBAAsBO,OAAQD,IACnDP,EAAKC,sBAAsBM,GAAGE,eAAiBF,EAIhD,IAAMG,EAAa,CACtB,CACIR,IAAK,CACDS,OAAQ,GAEZR,YAAa,IAEjB,CACID,IAAK,CACDE,KAAM,IAEVD,YAAa,KCjNf7E,EAAe,CACjBsF,gBAAiB,OACjB7E,OAAQ,OACRiE,KAAMH,EAAM,GACZgB,KAAM,CACFC,MAAO,EAAC,GACRC,IAAK,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,IAExCC,SAAU,CACND,IAAK,CAAClB,EAAM,IACZK,IAAK,CACDE,KAAM,GACNO,OAAQ,IAGhBM,QAAS,CACLF,IAAK,CAAClB,EAAM,GAAGA,EAAM,GAAGA,EAAM,GAAGA,EAAM,GAAGA,EAAM,GAAGA,EAAM,IACzDK,IAAK,CACDE,KAAM,KAuCHc,EAlCY,WAAmC,IAAlCjF,EAAiC,uDAAzBX,EAAcY,EAAW,uCACzD,OAAQA,EAAOC,MACX,IAAK,8BACD,OAAO,2BACAF,GADP,IAEI2E,gBAAiB1E,EAAOE,UAEhC,IAAK,gCACD,OAAO,2BACAH,GADP,IAEI4E,KAAM3E,EAAOE,UAErB,IAAK,sBACD,OAAO,2BACAH,GADP,IAEIF,OAAQ,YAEhB,IAAK,oBACD,OAAO,2BACAE,GADP,IAEI4E,KAAMvF,EAAauF,KACnB9E,OAAQ,QACLG,EAAOE,SAElB,IAAK,qBACD,OAAO,2BACAH,GADP,IAEIF,OAAQ,WAEhB,QACI,OAAOE,I,gDClDJkF,cACf,CACY7C,YAAa4C,EACbnE,MAAOf,iB,QCCJoF,EALDC,YACVC,EACAC,YAAgBC,MCHdC,EAAO,SAACC,GAIV,IAHA,IAAMC,EAAaD,EAAYrB,QAAO,SAACC,EAAMf,GAAP,OAAmBe,EAAOf,EAAQY,cAAY,GAC9EyB,EAAOC,KAAKC,SAASH,EACvBI,EAAa,EACRxB,EAAI,EAAGA,EAAIoB,EAAYpB,IAE5B,GAAIqB,IADJG,GAAcL,EAAYnB,GAAGJ,aAEzB,OAAOuB,EAAYnB,IAKzByB,EAAY,SAACC,EAASC,EAAWC,EAAU3B,GAU7C,IATA,IAAM4B,EAAQD,EAAS9B,QAAO,SAACC,EAAMN,GAI7B,OAHIA,IAASiC,GACT3B,EAAK+B,KAAK,CAACrC,KAAMA,EAAMG,YAAa,IAEjCG,IAEX,IAEES,EAAM,GACHR,EAAI,EAAGA,EAAGC,EAAQD,IACvBQ,EAAIR,GAAOA,EAAI2B,EAAaD,EAAUR,EAAKW,GAAOpC,KAGtD,IADA,IAAMsC,EAAS,GACN/B,EAAI,EAAGA,EAAGC,EAAQD,IAAK,CAC5B,IAAMgC,EAAWV,KAAKW,MAAMX,KAAKC,SAASf,EAAIP,QAC9C8B,EAAO/B,GAAKQ,EAAIwB,GAChBxB,EAAI0B,OAAOF,EAAU,GAEzB,OAAOD,GA0BEI,EAAmB,SAACvG,EAAMwG,GAAP,8CAAkB,WAAO3F,GAAP,eAAA4F,EAAA,uDACxCC,EADwC,eAC1BzB,EAAM0B,WAAWxE,YAAYuC,OACrC1E,IAAS0G,EAAQ1G,GAAMqE,OAASmC,IACxCE,EAAQ1G,GAAR,YAAoB0G,EAAQ1G,IAC5B0G,EAAQ1G,GAAMwG,IAAWE,EAAQ1G,GAAMwG,IAE3C3F,EAAS,CAAEb,KAAM,gCAAiCC,QAASyG,IAE/CE,OAAOC,OAAOH,GAASxC,QAAO,SAACC,EAAMf,GAC7C,QAAOA,EAAQc,QAAO,SAAC4C,EAAUC,GAAX,QAClBA,GAASD,KAAkB,IAC3B3C,KACD,IAEHtD,EAAS,CAAEb,KAAM,uBAdyB,2CAAlB,uDCpD1BiC,EAAU/B,UAAagC,KADd,mCA4Bf,IAKevB,eALS,SAACb,GACrB,MAAO,CACHF,OAAQE,EAAMqC,YAAYvC,UAGnBe,EA9Bf,YAA+D,EAAxCf,OAAyC,IAAjCyD,EAAgC,EAAhCA,UAAWxC,EAAqB,EAArBA,SAAqB,oDACrCE,IAAMC,SAAS,IADsB,mBACpDc,EADoD,KAC7CmB,EAD6C,KAErDC,EAAMnC,IAAMoC,SAOlB,OALApC,IAAMM,WAAU,WACR4B,EAAKC,EAAIE,QAAQtB,SAEpB,IAGG,kBAAC,SAAD,CACIkF,YAAU,EACVC,aAAW,EACXC,UAAW,kBAAMrG,EDcR,uCAAM,WAAOA,GAAP,uBAAA4F,EAAA,sDACrB5C,EAAOyB,EAAK1B,GACZ4C,EAASlB,EAAKzB,EAAKC,uBACnBa,EAAQW,EAAKf,GACbK,EAAMiB,EAAUhC,EAAKA,KAAM2C,EAAOlC,eAAgBZ,EAAO,GAEzDyD,EACF,CACItD,KAAMA,EAAKA,KACXgB,SAAU,CACND,IAAK,CAACf,EAAKA,MACXE,IAAKY,EAAMZ,KAEfe,QAAS,CACLF,IAAKA,EACLb,IAAKyC,EAAOzC,MAIxBlD,EAAS,CAAEb,KAAM,oBAAqBC,QAASkH,IAnBpB,2CAAN,wDCZTjE,IAAOA,EACPtB,GAAIyB,EAAUjB,YAAYN,MAAQA,GAAO,EACzCC,EAAGsB,EAAUjB,YAAYJ,OAAO,EAChCC,QAASA,GAEb,kBAAC,EAAD,CAAYoB,UAAapB,QCrB/BA,EAAU/B,UAAagC,KADd,mCAkBf,IAMevB,eANS,SAACb,GACrB,MAAO,CACHV,MAAOU,EAAMc,MAAMxB,MACnBQ,OAAQE,EAAMqC,YAAYvC,UAGnBe,EArBf,YAAiD,IAA3BvB,EAA0B,EAA1BA,MAAOQ,EAAmB,EAAnBA,OAAWW,EAAQ,kCAC5C,OACI,kBAAC,SAAD,CACInB,MAASA,EACTwC,GAAIrB,EAAMO,IAAIwB,SAAST,OAAOC,MAAQG,EAAQG,YAAYN,MAAM1C,GAAO,EACvE2C,EAAGxB,EAAMO,IAAIwB,SAAST,OAAOG,OAASC,EAAQG,YAAYJ,OAAO5C,EACjE6C,QAASA,EACTU,QAAoB,SAAX/C,GAAgC,WAAXA,GAE9B,kBAAC,EAAD,CAAcyD,UAAapB,IAC3B,kBAAC,EAAD,CAAcoB,UAAapB,QCexBmF,MA7Bf,YAAuC,IAAlBC,EAAiB,EAAjBA,KAAS9G,EAAQ,wBAC5B0B,EAAU/B,UAAagC,KAAKyB,EAAW0D,IADX,EAGVtG,IAAMC,SAAS,CACnCc,MAAO,EACPE,OAAQ,IALsB,mBAGrBsF,GAHqB,WAO5BC,EAASxG,IAAMoC,SAWrB,OARApC,IAAMM,WAAU,WACRY,EAAQuF,GAAG,UAAU,WACjBF,EAAQC,EAAOnE,cAKtB,IAEG,kBAAC,SAAD,eACIF,IAAKqE,EACLE,MAAO,CAACxF,EAAQG,YAAYN,MAAM,EAAGG,EAAQG,YAAYJ,OAAO,IAC5DzB,EAHR,CAII0B,QAASA,MC3BZyF,EAAgB,SAAC9F,EAAGG,EAAGD,EAAOE,GACvC,IAAM2F,EAAI,IAAIzH,WAKd,OAJAyH,EAAEC,QACFD,EAAEE,YACFF,EAAEG,SAASlG,EAAGG,EAAGD,EAAOE,GACxB2F,EAAEI,UACKJ,GAGEK,EAAY,SAAC,GAAoC,IAAnCpG,EAAkC,EAAlCA,EAAGG,EAA+B,EAA/BA,EAAIkG,EAA2B,uDAAzB,GAC1BN,EAAI,IAAIzH,WAId,OAHAyH,EAAEE,UAAU,GACZF,EAAEO,WAAWtG,EAAGG,EAAGkG,GACnBN,EAAEI,UACKJ,GAGEQ,EAAO9H,8BAChB,CACIC,oBAAqB,YAAe,IAAZ8H,EAAW,EAAXA,KACd/E,EAAY,IAAInD,YAEtB,OADAmD,EAAUgF,KAAOD,IACV/E,GAEXiF,iBAAkB,SAACC,EAAUC,EAAX,GAAmC,IAAZJ,EAAW,EAAXA,KACrCG,EAASF,KAAOD,MAGxB,QCtBEK,EAAQ9E,EAAW,qBACnB1B,GAAU/B,UAAagC,KAAKuG,GA4ElC,IAUe9H,gBAVS,SAACb,GACrB,MAAO,CACHgC,MAAOhC,EAAMc,MAAMvB,QACnB2C,OAAQlC,EAAMc,MAAMtB,SACpBF,MAAOU,EAAMc,MAAMxB,MACnBiI,KAAMvH,EAAMqC,YAAY0C,SAASD,IAAI,GACrChF,OAAQE,EAAMqC,YAAYvC,OAC1B8E,KAAM5E,EAAMqC,YAAYuC,KAAKC,MAAM,MAG5BhE,EAnFf,YAA+F,IAA1EmB,EAAyE,EAAzEA,MAAOE,EAAkE,EAAlEA,OAAOqF,EAA2D,EAA3DA,KAAM3C,EAAqD,EAArDA,KAAiBtF,GAAoC,EAA/CiE,UAA+C,EAApCjE,OAAOQ,EAA6B,EAA7BA,OAAQiB,EAAqB,EAArBA,SAAaN,EAAQ,0FAC1DQ,IAAMC,UAAS,GAD2C,mBACnF0H,EADmF,KACzEC,EADyE,OAEhE5H,IAAMC,SAC5B0G,EACI,EACA,EACA5F,EACAE,IAPkF,mBAEnF4G,EAFmF,KAE5EC,EAF4E,KAY1F,SAASC,EAAYC,GACbL,IACA7H,EAAS,CAACb,KAAM,8BAA+BC,QAAS,UAGxD4I,EAASb,EAAUe,EAAMC,KAAKC,OAAQ,IAAI7J,KAyBlD,OAAQ,kBAAC,YAAD,eAKAqI,MAAO,CAA2B,MAA1BxF,GAAQG,YAAYN,MAAY,EAA8B,KAA3BG,GAAQG,YAAYJ,OAAa,IACxEzB,GAEJ,kBAAC,EAAD,CACIqB,EAAGK,GAAQG,YAAYN,MAAM,EAC7BC,EAAKE,GAAQG,YAAYJ,OAAO,EAChCqF,KAAMA,EACN1E,QAAW,SAAW/C,GAAU,WAAaA,IAE7C,kBAACuI,EAAD,CAAMC,KAAM,kBAAIQ,GACVjG,SAAY+B,GAEd,kBAAC,SAAD,CACAuC,aAAW,EACXyB,SAAWA,EACXxB,UAAW,SAAWtH,EAnCtC,SAAmBmJ,GACfJ,GAAY,GACZ9H,EAAS,CAACb,KAAM,8BAA+BC,QAAS,gBACxDY,EAAS0F,EAAiB,QAAS,IACnCsC,EAASnB,EACL,EACA,EACA5F,EACAE,IAEJkH,YAAW,WACHrI,EAAS,CAACb,KAAM,8BAA+BC,QAAS,WAE/D,MAsBsD,aAC3CkJ,YAAa,SAAWvJ,EAzCxC,SAAqBmJ,GACjBJ,GAAY,GACZG,EAAYC,IAuC+C,aAC/CK,YAAa,SAAWxJ,EAASkJ,EAAc,aAC/C7G,QAASA,GACTU,SAAY+B,SCxE1BC,GAAQhB,EAAW,gBACnB1B,GAAU/B,UAAagC,KAAKyC,IA4BlC,IAUehE,gBAVS,SAACb,GACrB,MAAO,CACHgC,MAAOhC,EAAMc,MAAMvB,QACnB2C,OAAQlC,EAAMc,MAAMtB,SACpB+H,KAAMvH,EAAMqC,YAAY0C,SAASD,IAAI,GACrChF,OAAQE,EAAMqC,YAAYvC,UAKnBe,EAnCf,YAAwD,IAAxCmB,EAAuC,EAAvCA,MAAOE,EAAgC,EAAhCA,OAAgC,KAAzBqF,KAAyB,EAAnBzH,OAAmB,kDACjBmB,IAAMC,SAAS,CAC7Cc,MAAO,EACPE,OAAQ,KAHuC,mBAC5CqB,EAD4C,KACjCgG,EADiC,KAK7C5F,EAAU1C,IAAMoC,SAKtB,OAJApC,IAAMM,WAAU,WACRgI,EAAa5F,EAAQL,WAExB,IAEL,kBAAC,SAAD,CACIF,IAAOO,EACP7B,EAAW,IAARE,EAAeuB,EAAUvB,MAC5BC,EAAW,KAAPC,EACJC,QAASA,IAET,kBAAC,GAAD,CACIL,EAAIyB,EAAUvB,MAAO,EACrBC,EAAIsB,EAAUrB,OAAQ,QCDlC,IASerB,gBATS,SAACb,GACrB,MAAO,CACHT,QAASS,EAAMc,MAAMvB,QACrBC,SAAUQ,EAAMc,MAAMtB,SACtBmF,gBAAiB3E,EAAMqC,YAAYsC,gBACnC7E,OAAQE,EAAMc,MAAMhB,UAIbe,EAjCf,YAAuE,IAAnDG,EAAkD,EAAlDA,IAAKzB,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,SAAUM,EAA0B,EAA1BA,OAAQ6E,EAAkB,EAAlBA,gBAC1CvB,EAAMnC,IAAMoC,SAOlB,OANApC,IAAMM,WAAU,WAEZ6B,EAAIE,QAAQtD,MAAM6B,aAAa,EAA/B,cAAyC8C,EAAzC,UAAiE,KAGhE,CAACA,IACY,aAAX7E,EACH,kBAACQ,EAAD,CACI8C,IAAKA,EACL1C,MAASM,EAAIU,MAAM8H,eAAe,kBAClC1H,EAAc,IAAVvC,EACJ0C,EAAc,IAATzC,IAIT,QCdFsD,GAAQ,IAAI1C,YAAe,CAC7B2C,KAAM,UACNC,WAAY,kBACZC,SAJa,KA8EjB,IAMepC,gBANS,SAACb,GACrB,MAAO,CACH+D,KAAM/D,EAAMqC,YAAY0B,KACxBjE,OAAQE,EAAMqC,YAAYvC,UAGnBe,EA3Ef,YAA8C,IAA1BkD,EAAyB,EAAzBA,KAAMjE,EAAmB,EAAnBA,OAAWW,EAAQ,iCACnC0B,EAAU/B,UAAagC,KAAKyB,EAAWE,EAAO,WADX,EAGX9C,IAAMC,SAAS,CACzCc,MAAO,EACPE,OAAQ,IAL6B,mBAGlCoB,EAHkC,KAGzBmG,EAHyB,OAOXxI,IAAMC,SAAS,CACzCc,MAAO,EACPE,OAAQ,IAT6B,mBAOlCwH,EAPkC,KAOvBC,EAPuB,OAWV1I,IAAMC,SAAS,CAC1Cc,MAAO,EACPE,OAAQ,IAb6B,mBAWlC0H,EAXkC,KAWtBC,EAXsB,OAeT5I,IAAMC,SAAS,CAC3Cc,MAAO,EACPE,OAAQ,IAjB6B,mBAelC4H,EAfkC,KAetBC,EAfsB,KAoBnCpG,EAAU1C,IAAMoC,SAChB2G,EAAQ/I,IAAMoC,SACd4G,EAAQhJ,IAAMoC,SACdoE,EAASxG,IAAMoC,SAYrB,OAVApC,IAAMM,WAAU,WACRkI,EAAW9F,EAAQL,SACnBqG,EAASK,EAAM1G,SACfuG,EAASI,EAAM3G,SACfnB,EAAQuF,GAAG,UAAU,WACjBqC,EAAUtC,EAAOnE,cAGxB,IAGD,kBAAC,YAAD,eACIqE,MAAS,CAAC,EAAGrE,EAAQpB,OAAO,GAC5BkB,IAAOO,EACPd,QAAW,SAAW/C,GAAU,WAAaA,GAEzCW,GAEJ,kBAAC,OAAD,CACI2C,IAAK4G,EACLlH,MAAQA,GACR6E,MAAS,CAAC,EAAG+B,EAAUxH,OAAO,GAC9BD,EAAKqB,EAAQpB,OAAQ,EACrBsB,KAAK,qBAET,kBAAC,SAAD,CACIJ,IAAKqE,EACLE,MAAS,CAAC,EAAGmC,EAAW5H,OAAO,GAC/BJ,EAAK4H,EAAU1H,MAAyB,IAAjB8H,EAAW9H,MAClCC,EAAKqB,EAAQpB,OAAQ,EACrBC,QAASA,IAEb,kBAAC,OAAD,CACIiB,IAAK6G,EACLnH,MAAQA,GACR6E,MAAS,CAAC,EAAGiC,EAAW1H,OAAO,GAC/BJ,EAAK4H,EAAU1H,MAAyB,IAAjB8H,EAAW9H,MAClCC,EAAKqB,EAAQpB,OAAQ,EACrBsB,KAAK,yBCxEfmF,GAAQ9E,EAAW,kBACnB1B,GAAU/B,UAAagC,KAAKuG,IA6BlC,IAKe9H,gBALS,SAACb,GACrB,MAAO,CACHF,OAAQE,EAAMqC,YAAYvC,UAGnBe,EAhCf,YAAyC,EAAnBf,OAAoB,IAATW,EAAQ,4BACPQ,IAAMC,SAAS,CACzCc,MAAO,EACPE,OAAQ,IAHyB,mBAC9BoB,EAD8B,KACrBmG,EADqB,KAK/B9F,EAAU1C,IAAMoC,SAMtB,OALApC,IAAMM,WAAU,WACRkI,EAAW9F,EAAQL,WAEtB,IAGG,kBAAC,SAAD,eACIF,IAAOO,EACPxB,QAASA,GACTwF,MAAS,CAACrE,EAAQtB,MAAQ,EAAGsB,EAAQpB,OAAO,IACxCzB,GAEJ,kBAAC,GAAD,CACIqB,EAAmB,KAAdwB,EAAQtB,MACbC,EAAKqB,EAAQpB,OAAQ,QCrBnCgI,GAAUrG,EAAW,iBACrB1B,GAAU/B,UAAagC,KAAK8H,IAE5BvB,GAAQ9E,EAAW,SACnBsG,GAAY/J,UAAagC,KAAKuG,IAyGpC,IAUe9H,gBAVS,SAACb,GACrB,MAAO,CACHgC,MAAOhC,EAAMc,MAAMvB,QACnB2C,OAAQlC,EAAMc,MAAMtB,SACpBF,MAAOU,EAAMc,MAAMxB,MACnByE,KAAM/D,EAAMqC,YAAY0B,KACxBjE,OAAQE,EAAMqC,YAAYvC,OAC1B8E,KAAM5E,EAAMqC,YAAYuC,KAAKE,OAGtBjE,EAjHf,YAAqG,IAA9EmB,EAA6E,EAA7EA,MAAOE,EAAsE,EAAtEA,OAAQ0C,EAA8D,EAA9DA,KAAM2C,EAAwD,EAAxDA,KAAMb,EAAkD,EAAlDA,OAAQ3C,EAA0C,EAA1CA,KAAMzE,EAAoC,EAApCA,MAAOQ,EAA6B,EAA7BA,OAAQiB,EAAqB,EAArBA,SAAqB,+FAChEE,IAAMC,UAAS,IADiD,mBACzF0H,EADyF,KAC/EC,EAD+E,OAEtE5H,IAAMC,SAC5B0G,EACI,EACA,EACA5F,EACAE,IAPwF,mBAEzF4G,EAFyF,KAElFC,EAFkF,OAWlE9H,IAAMC,SAAS,CACzCc,MAAO,EACPE,OAAQ,IAboF,mBAWzFoB,EAXyF,KAWhFmG,EAXgF,KAe1F9F,EAAU1C,IAAMoC,SAf0E,EAiB5EpC,IAAMC,SAAS,CAC/Bc,MAAO,EACPE,OAAQ,IAnBoF,mBAiBzFkI,EAjByF,KAiBrFC,EAjBqF,KAqB1F1B,EAAQ1H,IAAMoC,SASpB,SAAS2F,EAAYC,GACbL,IACA7H,EAAS,CAACb,KAAM,8BAA+BC,QAAS,UAGxD4I,EAASb,EAAUe,EAAMC,KAAKC,OAAQ,IAAI7J,KA4BlD,OAzCA2B,IAAMM,WAAU,WACJoC,EAAQL,SAAWK,EAAQL,QAAQtB,OAAS2B,EAAQL,QAAQtB,QAAUsB,EAAQtB,OAC9EyH,EAAW9F,EAAQL,SAEvB+G,EAAM1B,EAAMrF,WAEf,CAACK,EAAQL,QAASqF,EAAMrF,UAmCrB,kBAAC,YAAD,CACAF,IAAKO,EACLgE,MAAS,CAACxF,GAAQG,YAAYN,MAAM,EAA8B,IAA3BG,GAAQG,YAAYJ,QAC3DJ,GAAM4E,EAAO,EAAG,IAA8B,IAA1BvE,GAAQG,YAAYN,OACxCC,EAAM2D,KAAKW,MAAMG,EAAO,IAAgC,IAA3BvE,GAAQG,YAAYJ,SAGrD,kBAAC,SAAD,CACIkB,IAAOuF,EACPhB,MAAO,CAACyC,EAAGpI,MAAM,EAAGoI,EAAGlI,OAAO,GAC9BC,QAASgI,GACTrI,EAAGwB,EAAQtB,MAAM,EACjBC,EAAKqB,EAAQpB,OAAO,GAEhB,kBAAC,EAAD,CACIJ,EAAGsI,EAAGpI,MAAQ,EACdC,EAAGmI,EAAGlI,OAAS,EACfqF,KAAMA,EACN1E,QAAsB,SAAX/C,KAGf,kBAACuI,EAAD,CAAMC,KAAM,kBAAIQ,GACVjG,SAAU+B,EAAK8B,IAEjB,kBAAC,SAAD,CACIS,aAAW,EACXyB,SAAWA,EACXxB,UAAW,SAAWtH,EA7C1C,SAAmBmJ,GACfJ,GAAY,GACZ9H,EAAS,CACLb,KAAM,8BACNC,QAASoH,IAASxD,EAAO,aAAe,iBAE5ChD,EAAS0F,EAAiB,MAAOC,IACjCqC,EAASnB,EACL,EACA,EACA5F,EACAE,IAEJkH,YAAW,WACHrI,EAAS,CAACb,KAAM,8BAA+BC,QAAS,WAE3D,MA6BsD,aAC3CkJ,YAAa,SAAWvJ,EAnD5C,SAAqBmJ,GACjBJ,GAAY,GACZG,EAAYC,IAiDmD,aAC/CK,YAAa,SAAWxJ,EAASkJ,EAAc,aAG/C7G,QAASA,GACTU,SAAU+B,EAAK8B,UCpEvC,IAKe7F,gBALS,SAACb,GACrB,MAAO,CACH8E,IAAK9E,EAAMqC,YAAY2C,QAAQF,OAGxBjE,EA1Cf,YAA+B,IAAjBiE,EAAgB,EAAhBA,IAAQrE,EAAQ,yBAEIQ,IAAMC,SAAS,CACzCc,MAAO,EACPE,OAAQ,IAJc,mBAEnBoB,EAFmB,KAEVmG,EAFU,KAOpB9F,EAAU1C,IAAMoC,SAWtB,OARApC,IAAMM,WAAU,WAEJoC,EAAQL,SAAWK,EAAQL,QAAQtB,OAAS2B,EAAQL,QAAQtB,QAAUsB,EAAQtB,OAC9EyH,EAAW9F,EAAQL,WAG1B,CAACK,EAAQL,UAGV,kBAAC,YAAD,eACIqE,MAAS,CAAC,EAAGrE,EAAQpB,OAAO,GAC5BkB,IAAOO,GACHlD,GAEHqE,EAAIwF,KAAI,SAAC/C,EAAMgD,GAAP,OACL,kBAAC,GAAD,CACIC,IAAOD,EACPhD,KAAMA,EACNb,OAAQ6D,WCO5B,IAMe1J,gBANS,SAACb,GACrB,MAAO,CACHgC,MAAOhC,EAAMc,MAAMvB,QACnB2C,OAAQlC,EAAMc,MAAMtB,YAGbqB,EAxCf,YAAkD,IAA3BmB,EAA0B,EAA1BA,MAAOE,EAAmB,EAAnBA,OAAmB,qCACXjB,IAAMC,SAAS,CAC7Cc,MAAO,EACPE,OAAQ,KAHiC,mBACtCqB,EADsC,KAC3BgG,EAD2B,KAMvC5F,EAAU1C,IAAMoC,SAQtB,OANApC,IAAMM,WAAU,WACJoC,EAAQL,SAAWK,EAAQL,QAAQtB,OAAS2B,EAAQL,QAAQtB,QAAUuB,EAAUvB,OAChFuH,EAAa5F,EAAQL,WAG5B,CAACK,EAAQL,UAEV,kBAAC,YAAD,CACIF,IAAOO,EACPgE,MAAS,CAACpE,EAAUvB,MAAQ,EAAG,GAC/BF,EAAIE,EAAO,EACXC,EAAW,MAAPC,EAAc,GAElB,kBAAC,GAAD,CACIJ,EAAIyB,EAAUvB,MAAO,IAEzB,kBAAC,GAAD,CACIF,EAAIyB,EAAUvB,MAAO,EACrBC,EAAKsB,EAAUrB,aC3BzBC,GAAU/B,UAAagC,KADd,0CAmBf,IAMevB,gBANS,SAACb,GACrB,MAAO,CACHgC,MAAOhC,EAAMc,MAAMvB,QACnB2C,OAAQlC,EAAMc,MAAMtB,YAGbqB,EArBf,YAAgD,IAA3BmB,EAA0B,EAA1BA,MAAOE,EAAmB,EAAnBA,OAAmB,qCACfjB,IAAMC,SAAS,IADA,mBACpCuJ,EADoC,KACvBtH,EADuB,KAErCQ,EAAU1C,IAAMoC,SAKtB,OAJApC,IAAMM,WAAU,WACR4B,EAAKQ,EAAQL,QAAQtB,SAExB,IACE,kBAAC,SAAD,CACHoB,IAAOO,EACP7B,GAAIE,EAAQyI,GAAa,EACzBxI,EAAW,IAAPC,EACJC,QAASA,QCdXW,GAAQ,IAAI1C,YAAe,CAC7B2C,KAAM,UACNC,WAAY,kBACZC,SAJa,MA6BFyH,OAtBf,SAAiBjK,GAAQ,IAAD,EACUQ,IAAMC,SAAS,CACzCc,MAAO,EACPE,OAAQ,IAHQ,mBACboB,EADa,KACJmG,EADI,KAKd9F,EAAU1C,IAAMoC,SAMtB,OALApC,IAAMM,WAAU,WACRkI,EAAW9F,EAAQL,WAEtB,IAGG,kBAAC,OAAD,eACIF,IAAOO,EACPgE,MAAO,CAACrE,EAAQtB,MAAM,EAAG,GACzBc,MAAQA,GACRU,KAAK,WACD/C,K,SCGLkK,OA3Bf,YAA2C,IAAlB/I,EAAiB,EAAjBA,KAASnB,EAAQ,wBAChCmK,EAAgBxK,UAAagC,KAAKyB,EAAWjC,IADb,EAGRX,IAAMC,SAAS,CACzCc,MAAO,EACPE,OAAQ,IAL0B,mBAG/BoB,EAH+B,KAGtBmG,EAHsB,KAQhC9F,EAAU1C,IAAMoC,SAStB,OANApC,IAAMM,WAAU,WACRqJ,EAAclD,GAAG,UAAU,WACvB+B,EAAW9F,EAAQL,cAG1B,CAACK,EAAQL,UAEV,kBAAC,SAAD,eACIF,IAAOO,GACHlD,EAFR,CAGI0B,QAASyI,EACTjD,MAAS,CAAgB,IAAdrE,EAAQtB,MAAWsB,EAAQpB,OAAO,OCpBnDY,GAAQ,IAAI1C,YAAe,CAC7B2C,KAAM,UACNC,WAAY,kBACZC,SAJa,MAqGjB,IAMepC,gBANS,SAACb,GACrB,MAAO,CACH6K,SAAU7K,EAAMqC,YAAY0C,SAASd,IACrC6G,OAAQ9K,EAAMqC,YAAY2C,QAAQf,OAG3BpD,EAnGf,YAAqD,IAAjCgK,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,EAAMtK,EAAQ,yCAkB1CuK,EAjBW,SAACA,GACd,IADuB,EACjBC,EAAW,GADM,eAEPD,GAFO,IAEvB,2BACI,IADmB,IAAd/G,EAAa,QAClB,MAA8B6C,OAAOoE,QAAQjH,GAA7C,eAAmD,CAAC,IAAD,sBAAzCkH,EAAyC,KAA/BC,EAA+B,KAC3CA,EAAQ,IACJH,EAASE,GACTF,EAASE,IAAaC,EAGtBH,EAASE,GAAYC,IATd,8BAcvB,OAAOH,EAGEI,CAAS,CAACR,EAAUC,IAlBe,EAqBlB7J,IAAMC,SAAS,CACzCc,MAAO,EACPE,OAAQ,IAvBoC,mBAqBzCoB,EArByC,KAqBhCmG,EArBgC,OA0BpBxI,IAAMC,SAAS,CACvCc,MAAO,EACPE,OAAQ,IA5BoC,mBA0BzCwC,EA1ByC,KA0BjC4G,EA1BiC,OA8BxBrK,IAAMC,SAAS,CACnCc,MAAO,EACPE,OAAQ,IAhCoC,mBA8BzCiC,EA9ByC,KA8BnCoH,EA9BmC,KAmC1C5H,EAAU1C,IAAMoC,SAChBmI,EAAYvK,IAAMoC,SAClBoI,EAAYxK,IAAMoC,SAexB,OAbApC,IAAMM,WAAU,WACJoC,EAAQL,SACRmG,EAAW9F,EAAQL,SAEnBkI,EAAUlI,SACVgI,EAAUE,EAAUlI,SAEpBmI,EAAUnI,SACViI,EAAQE,EAAUnI,WAGzB,CAACK,EAAQL,QAASkI,EAAUlI,QAASmI,EAAUnI,UAGhD,kBAAC,YAAD,eACIqE,MAAS,CAACrE,EAAQtB,MAAM,EAAG,GAC3BoB,IAAOO,GACHlD,GAEA,kBAAC,OAAD,CACI2C,IAAOoI,EACP7D,MAAO,CAAEjD,EAAO1C,MAAO,EAAG,GAC1Bc,MAAQA,GACRU,KAAMwH,EAAKtG,QAAU,EACrB5C,EAAK,EACLe,QAAWmI,EAAKtG,OAAO,GAEvB,kBAAC,GAAD,CACI5C,EAAG4C,EAAO1C,MACVC,EAAGyC,EAAOxC,OAAS,EACnBN,KAAM,iBAId,kBAAC,OAAD,CACIwB,IAAOqI,EACP9D,MAAO,CAAExD,EAAKnC,MAAO,EAAG,GACxBc,MAAQA,GACRU,KAAMwH,EAAK7G,MAAQ,EACnBrC,EAAK4C,EAAO1C,OAASgJ,EAAKtG,OAAW,IAAFqG,EAAQ,GAC3ClI,QAAWmI,EAAK7G,KAAK,GAGrB,kBAAC,GAAD,CACIrC,EAAGqC,EAAKnC,MACRC,EAAGkC,EAAKjC,OAAS,EACjBN,KAAM,uBC1FxB8J,GAAS7H,EAAW,UACpB1B,GAAU/B,UAAagC,KAAKsJ,IAoClC,IAOe7K,gBAPS,SAACb,GACrB,MAAO,CACHV,MAAOU,EAAMc,MAAMxB,MACnBQ,OAAQE,EAAMqC,YAAYvC,UAInBe,EAzCf,YAA0C,IAAtBvB,EAAqB,EAArBA,MAAO0B,EAAc,EAAdA,IAAKlB,EAAS,EAATA,OACtB6L,EAAIvL,UAAagC,KAAKyB,EAAW,gBADF,EAEnB5C,IAAMC,SAAS,GAFI,mBAE9B6J,EAF8B,KAE3Ba,EAF2B,KAUrC,OANA3K,IAAMM,WAAU,WACRoK,EAAEjE,GAAG,UAAU,WACXkE,EAAKD,EAAErJ,YAAYN,YAG1B,IAED,kBAAC,SAAD,CACI1C,MAASA,EACTqI,MAAO,CAACxF,GAAQG,YAAYN,MAAM,EAAG,GACrCF,EAAId,EAAIwB,SAAST,OAAOC,MAAO,EAC/BC,EAA8B,IAA3BjB,EAAIwB,SAAST,OAAOG,OACvBC,QAASA,GACTU,QAAsB,WAAX/C,GAEX,kBAAC,GAAD,CACIgC,EAAGK,GAAQG,YAAYN,MAAM,EAC7BC,EAA8B,GAA3BE,GAAQG,YAAYJ,SAE3B,kBAAC,GAAD,CACIJ,EAAIK,GAAQG,YAAYN,MAAO,EAC/BC,EAAKE,GAAQG,YAAYJ,OAAO,EAChC2J,QAAWF,EACX9I,QAAWkI,EACXA,EAAKA,QCArB,IAUelK,gBAVS,SAACb,GACrB,MAAO,CACHF,OAAQE,EAAMqC,YAAYvC,OAC1BR,MAAOU,EAAMc,MAAMxB,MACnB0C,MAAOhC,EAAMc,MAAMvB,QACnB2C,OAAQlC,EAAMc,MAAMtB,SACpBsM,YAAa9L,EAAMc,MAAMhB,UAIlBe,EArCf,YAAqE,EAAtDf,OAAuD,IAA/CR,EAA8C,EAA9CA,MAAO0C,EAAuC,EAAvCA,MAAOE,EAAgC,EAAhCA,OAAQ4J,EAAwB,EAAxBA,YAAgBrL,EAAQ,iEAEjE,MAAuB,aAAhBqL,EACH,kBAACzD,EAAD,CAAMC,KAAM,kBAAMV,GACZnH,EAAMO,IAAIwB,SAAST,OAAOC,MAAQA,EAAM1C,GAAO,EAAK0C,EAAM1C,EAAM,IAClE,EACA0C,EAAM1C,EAAM,IACZ4C,KAEA,kBAAC,EAAezB,EACZ,kBAAC,GAAD,MACA,kBAAC,GAAcA,GACf,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEJ,kBAAC,GAAcA,GACf,kBAAC,EAAgBA,IAGrB,QCxBFyB,GAASxC,OAAOG,YAChBmC,GAAQtC,OAAOC,WACfoM,GAAU,CACdC,gBAAiB,EACjBC,WAAYvM,OAAO6C,kBAAoB,EAEvCL,OAAQA,GACRF,MAAOA,IAGHkK,GAAO,SAAC,GAAqB,IAApBlL,EAAmB,EAAnBA,IAAQP,EAAW,yBACAQ,IAAMC,UAAS,GADf,mBACvBiL,EADuB,KACdC,EADc,KAY9B,OATAnL,IAAMM,WAAU,WAGZ6H,YAAW,WACHgD,GAAW,KAEd,OACP,IAEKD,EACF,kBAAC,EAAD,eAAgBnL,IAAKA,GAASP,IAE3B,kBAAC,GAAD,eAAMO,IAAKA,GAASP,KA+BjB4L,OA1Bf,WAAgB,IAAD,EACmBpL,IAAMC,UAAS,GADlC,mBACKkL,GADL,WAWb,OAREnL,IAAMM,WAAU,WAEZ6H,YAAW,WACPgD,GAAW,KAEV,OACP,IAIA,kBAAC,QAAD,CAAOE,QAASP,IACZ,kBAAC,IAAD,CAAU5G,MAAOA,GAEb,kBAAC,aAAWoH,SAAZ,MACC,SAAAvL,GAAG,OAAK,kBAAC,GAAD,CAAMA,IAAKA,UC3CdwL,QACW,cAA7B9M,OAAO+M,SAASC,UAEe,UAA7BhN,OAAO+M,SAASC,UAEhBhN,OAAO+M,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KAEQ,kBAAC,GAAD,OAERC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b54cdd18.chunk.js","sourcesContent":["const initialState = {\r\n    scale: 0.25,\r\n    widthBg: 0,\r\n    heightBg: 0,\r\n    widthScreen: window.innerWidth,\r\n    heightScreen: window.innerHeight,\r\n    status: \"idle\"\r\n};\r\n\r\nconst sizesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"sizes/setSizes\":\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case \"sizes/setStatus\":\r\n            // console.log(action)\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default sizesReducer;\r\n","export { default as sizesReducer } from \"./reducer\";\r\nexport * from \"./actions\";\r\n","import * as PIXI from \"pixi.js\";\r\nimport {CustomPIXIComponent} from \"react-pixi-fiber\";\r\nwindow.PIXI = PIXI;\r\nrequire(\"pixi-spine\")\r\nexport const SpineAnimation = CustomPIXIComponent({\r\n    customDisplayObject(props) {\r\n        return new window.PIXI.spine.Spine(props.spine.spineData)\r\n    }\r\n},\r\n    \"Spine\")","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport {connect} from \"react-redux\";\r\nimport {Container} from \"react-pixi-fiber\";\r\nimport {SpineAnimation} from \"./Spine\";\r\n\r\nwindow.PIXI = PIXI;\r\nrequire(\"pixi-spine\")\r\n\r\nfunction SpineCharacter({scale, dispatch, status, app}) {\r\n    const [spineData, setSpineData] = React.useState(null)\r\n\r\n    function loader(loader, res) {\r\n        setSpineData(res.spineCharacter)\r\n        dispatch({type: \"sizes/setStatus\", payload: \"download\"});\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        if (status !== \"download\") {\r\n            app.loader\r\n                .add('spineCharacter', '/assets/char_spine_v5/Red.json')\r\n                .load(loader)\r\n        }\r\n        else {\r\n            app.stage.getChildAt(0).name = 'spineCharacter';\r\n            app.stage.getChildAt(0).state.setAnimation(0, 'red_loading_screen_animation_loop', true);\r\n        }\r\n    },[status])\r\n\r\n    return status === \"download\" ? (\r\n        <SpineAnimation\r\n            spine = {spineData}\r\n            x ={app.screen.width / 2}\r\n            y = {app.screen.height / 2}\r\n            scale = {scale}\r\n\r\n        />\r\n    )\r\n        : <Container/>;\r\n}\r\n\r\nSpineCharacter.propTypes = {\r\n    app: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        scale: state.sizes.scale,\r\n        status: state.sizes.status,\r\n\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(SpineCharacter);","import React from \"react\";\r\nimport { Sprite} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst bg = \"/assets/magic_forest_bg.jpg\";\r\nconst texture = PIXI.Texture.from(bg)\r\n\r\nfunction Background({status, scale, dispatch, heightScreen, ...props}) {\r\n    // const children = React.Children.map(props.children, child => {\r\n    //         return React.cloneElement(child, {container: texture});\r\n    //     }\r\n    // );\r\n    const width = texture.baseTexture.width;\r\n    const height = texture.baseTexture.height;\r\n    dispatch({ type: \"sizes/setSizes\", payload: {\r\n            widthBg: width,\r\n            heightBg: height,\r\n            scale: (heightScreen / (window.devicePixelRatio || 1))/height\r\n        }});\r\n\r\n\r\n\r\n    return(\r\n\r\n    <Sprite\r\n        scale = {scale}\r\n        texture={texture}\r\n        x={(props.app.renderer.screen.width - width*scale)/2}\r\n        y={(props.app.renderer.screen.height - height*scale)/2}\r\n    >\r\n        {props.children}\r\n        <Sprite\r\n            texture={PIXI.Texture.WHITE}\r\n            width ={width}\r\n            height = {height}\r\n            tint = {0x000000}\r\n            alpha={0.6}\r\n            visible={\"idle\" === status || \"finish\" === status}\r\n        />\r\n    </Sprite>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        status: state.currentGame.status,\r\n        scale: state.sizes.scale,\r\n        heightScreen: state.sizes.heightScreen,\r\n\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Background);","import React from \"react\";\r\nimport {Sprite, Text, Container} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\n\r\nconst fontSize = 72;\r\nconst style = new PIXI.TextStyle({\r\n    fill: \"#ff8729\",\r\n    fontFamily: \"DRAguSans-Black\",\r\n    fontSize: fontSize\r\n});\r\nconst question = \"/assets/magic_forest_question_icon.png\";\r\nconst texture = PIXI.Texture.from(question)\r\n\r\nfunction BannerHeader(props) {\r\n    const [width, setX] = React.useState(0);\r\n    const ref = React.useRef()\r\n\r\n    React.useEffect(()=> {\r\n            setX(ref.current.width)\r\n        }\r\n        ,[])\r\n\r\n    return (\r\n        <Container\r\n            ref = {ref}\r\n            x={(props.container.baseTexture.width - width)/2}\r\n            y={props.container.baseTexture.height*0.15}\r\n        >\r\n            <Sprite texture={texture} />\r\n            <Text\r\n                style={ style}\r\n                text=\"How To Play\"\r\n                x = {texture.baseTexture.width*1.5}\r\n                y = {(texture.baseTexture.height - fontSize)/2}\r\n            />\r\n        </Container>\r\n     );\r\n}\r\n\r\nexport default BannerHeader;\r\n","import React from \"react\";\r\nimport {Sprite, Text, Container} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\n\r\nconst fontSize = 72;\r\nconst style = new PIXI.TextStyle({\r\n    fill: \"#ffFFFF\",\r\n    fontFamily: \"DRAguSans-Black\",\r\n    fontSize: fontSize\r\n});\r\nconst coin = \"/assets/magic_forest_coin_icon_small.png\";\r\nconst texture = PIXI.Texture.from(coin)\r\n\r\nfunction ButtonText(props) {\r\n    const [width, setX] = React.useState(0);\r\n    const [height, setY] = React.useState(0);\r\n    const wrapper = React.useRef();\r\n    const text = React.useRef()\r\n\r\n\r\n    React.useEffect(()=> {\r\n        // console.log(text.current.width)\r\n            setX(wrapper.current.width);\r\n            setY(wrapper.current.height)\r\n\r\n        }\r\n        ,[])\r\n\r\n    return (\r\n        <Container\r\n            ref = {wrapper}\r\n            x={(props.container.baseTexture.width - width)/2}\r\n            y={(props.container.baseTexture.height - height)/2}\r\n        >\r\n            <Text\r\n                ref = {text}\r\n                style={ style}\r\n                text=\"Play for 60\"\r\n                y = {(texture.baseTexture.height - fontSize*1.2)/2}\r\n            />\r\n            <Sprite\r\n                x = {text.current ? text.current.width + 20 : 0}\r\n                texture={texture} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ButtonText;\r\n","export const SUITS = [\"bonfire\", \"bow\", \"leaf\", \"rope\", \"tent\"];\r\nexport const CURRENCIES = [\"dollar\", \"coin\"];\r\n\r\n\r\nexport const getPngName = (name) => `/assets/magic_forest_${name}.png`\r\n\r\nexport const MAINRULES = [\r\n    {\r\n        suit: SUITS[0],\r\n        cardNumbersProperties:[\r\n            {\r\n                win: {},\r\n                probability: 0\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 5\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 5\r\n            },\r\n            {\r\n                win:{\r\n                    coin: 25\r\n                },\r\n                probability: 10\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 0\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 0\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        suit: SUITS[1],\r\n        cardNumbersProperties:[\r\n            {\r\n                win: {},\r\n                probability: 0\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 6\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 6\r\n            },\r\n            {\r\n                win:{\r\n                    coin: 30\r\n                },\r\n                probability: 8\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 0\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 0\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        suit: SUITS[2],\r\n        cardNumbersProperties:[\r\n            {\r\n                win: {},\r\n                probability: 0\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 7\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 7\r\n            },\r\n            {\r\n                win:{\r\n                    coin: 35\r\n                },\r\n                probability: 6\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 0\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 0\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        suit: SUITS[3],\r\n        cardNumbersProperties:[\r\n            {\r\n                win: {},\r\n                probability: 0\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 8\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 8\r\n            },\r\n            {\r\n                win:{\r\n                    coin: 50\r\n                },\r\n                probability: 4\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 0\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 0\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        suit: SUITS[0],\r\n        cardNumbersProperties:[\r\n            {\r\n                win: {},\r\n                probability: 0\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 5\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 5\r\n            },\r\n            {\r\n                win:{\r\n                    coin: 25\r\n                },\r\n                probability: 10\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 0\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 0\r\n            },\r\n        ]\r\n    },{\r\n        suit: SUITS[4],\r\n        cardNumbersProperties:[\r\n            {\r\n                win: {},\r\n                probability: 0\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 9\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 9\r\n            },\r\n            {\r\n                win:{\r\n                    coin: 100\r\n                },\r\n                probability: 2\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 0\r\n            },\r\n            {\r\n                win:{},\r\n                probability: 0\r\n            },\r\n        ]\r\n    },\r\n]\r\nfor (const suit of MAINRULES) {\r\n    suit.probability = suit.cardNumbersProperties.reduce((prev, current) => prev + current.probability,0);\r\n    for (let i = 0; i < suit.cardNumbersProperties.length; i++) {\r\n        suit.cardNumbersProperties[i].numbersOfCards = i\r\n    }\r\n}\r\n\r\nexport const BONUSRULES = [\r\n    {\r\n        win: {\r\n            dollar: 1\r\n        },\r\n        probability: 20\r\n    },\r\n    {\r\n        win: {\r\n            coin: 25\r\n        },\r\n        probability: 80\r\n    },\r\n]\r\n","import {SUITS} from \"../../consts\";\r\n\r\nconst initialState = {\r\n    statusCharacter: \"idle\",\r\n    status: \"idle\",\r\n    suit: SUITS[0],\r\n    open: {\r\n        bonus: [false],\r\n        set: [false,false,false,false,false,false]\r\n    },\r\n    bonusSet: {\r\n        set: [SUITS[0]],\r\n        win: {\r\n            coin: 25,\r\n            dollar: 0\r\n        }\r\n    },\r\n    mainSet: {\r\n        set: [SUITS[0],SUITS[2],SUITS[3],SUITS[4],SUITS[1],SUITS[2]],\r\n        win: {\r\n            coin: 0\r\n        }\r\n    }\r\n};\r\n\r\nconst currentGameReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"currentGame/statusCharacter\":\r\n            return {\r\n                ...state,\r\n                statusCharacter: action.payload\r\n            };\r\n        case \"currentGame/changeCardsStatus\":\r\n            return {\r\n                ...state,\r\n                open: action.payload\r\n            };\r\n        case \"currentGame/pending\":\r\n            return {\r\n                ...state,\r\n                status: \"pending\"\r\n            };\r\n        case \"currentGame/start\":\r\n            return {\r\n                ...state,\r\n                open: initialState.open,\r\n                status: \"play\",\r\n                ...action.payload\r\n            };\r\n        case \"currentGame/finish\":\r\n            return {\r\n                ...state,\r\n                status: \"finish\",\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default currentGameReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport {currentGameReducer} from \"../services/CurrentGame\";\r\nimport {sizesReducer} from \"../services/Sizes\";\r\n\r\n\r\nexport default combineReducers(\r\n{\r\n            currentGame: currentGameReducer,\r\n            sizes: sizesReducer\r\n        }\r\n);","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","import store from \"../../store/configure-store\";\r\nimport {BONUSRULES, MAINRULES, SUITS} from \"../../consts\";\r\n\r\nconst pick = (outcomesArr) => {\r\n    const totalProbs = outcomesArr.reduce((prev, current) => prev + current.probability,0)\r\n    const dice = Math.random()*totalProbs;\r\n    let currentSum = 0;\r\n    for (let i = 0; i < totalProbs; i++) {\r\n        currentSum += outcomesArr[i].probability;\r\n        if (dice <= currentSum) {\r\n            return outcomesArr[i]\r\n        }\r\n    }\r\n}\r\n\r\nconst createSet = (winSuit, winNumber, allSuits, length) => {\r\n    const suits = allSuits.reduce((prev, suit) => {\r\n            if (suit !== winSuit) {\r\n                prev.push({suit: suit, probability: 1})\r\n            }\r\n            return prev\r\n        },\r\n        [])\r\n    // console.log(suits)\r\n    const set = [];\r\n    for (let i = 0; i <length; i++) {\r\n        set[i] = ((i < winNumber) ? winSuit : pick(suits).suit)\r\n    }\r\n    const mixSet = [];\r\n    for (let i = 0; i <length; i++) {\r\n        const position = Math.floor(Math.random()*set.length)\r\n        mixSet[i] = set[position];\r\n        set.splice(position, 1)\r\n    }\r\n    return mixSet\r\n}\r\n\r\nexport const startGame = () => async (dispatch) => {\r\n    const suit = pick(MAINRULES);\r\n    const number = pick(suit.cardNumbersProperties);\r\n    const bonus = pick(BONUSRULES);\r\n    const set = createSet(suit.suit, number.numbersOfCards, SUITS, 6);\r\n\r\n    const game =\r\n        {\r\n            suit: suit.suit,\r\n            bonusSet: {\r\n                set: [suit.suit],\r\n                win: bonus.win\r\n            },\r\n            mainSet: {\r\n                set: set,\r\n                win: number.win\r\n            }\r\n        }\r\n\r\n    dispatch({ type: \"currentGame/start\", payload: game });\r\n\r\n};\r\n\r\nexport const changeCardStatus = (type, number) => async (dispatch) => {\r\n    const newOpen = {...store.getState().currentGame.open};\r\n    if (newOpen[type] && newOpen[type].length > number) {\r\n        newOpen[type] = [...newOpen[type]];\r\n        newOpen[type][number] = !newOpen[type][number];\r\n    }\r\n    dispatch({ type: \"currentGame/changeCardsStatus\", payload: newOpen});\r\n\r\n    let isEnd = Object.values(newOpen).reduce((prev, current) => {\r\n        return current.reduce((prevCard, isOpen) =>\r\n            isOpen ? prevCard : false, true) ?\r\n            prev : false\r\n        }, true)\r\n    if (isEnd) {\r\n        dispatch({ type: \"currentGame/finish\"});\r\n    }\r\n};\r\n\r\n","import React from \"react\";\r\nimport {Sprite} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport ButtonText from \"./ButtonText\";\r\nimport {connect} from \"react-redux\";\r\nimport {startGame} from \"../../services/CurrentGame\";\r\n\r\nconst button = \"/assets/magic_forest_button.png\";\r\nconst texture = PIXI.Texture.from(button)\r\n\r\nfunction BannerButton({status, container, dispatch, ...props}) {\r\n    const [width, setX] = React.useState(0);\r\n    const ref = React.useRef()\r\n\r\n    React.useEffect(()=> {\r\n            setX(ref.current.width)\r\n        }\r\n        ,[])\r\n\r\n    return (\r\n            <Sprite\r\n                buttonMode\r\n                interactive\r\n                pointerup={() => dispatch(startGame())}\r\n                // pointerup={() => console.log(\"click\")}\r\n                ref = {ref}\r\n                x={(container.baseTexture.width - width)/2}\r\n                y={container.baseTexture.height/2}\r\n                texture={texture}\r\n            >\r\n            <ButtonText container = {texture}/>\r\n            </Sprite>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        status: state.currentGame.status,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(BannerButton);\r\n","import React from \"react\";\r\nimport {Sprite} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport BannerHeader from \"./BannerHeader\";\r\nimport BannerButton from \"./BannerButton\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst banner = \"/assets/magic_forest_frame2.png\";\r\nconst texture = PIXI.Texture.from(banner)\r\n\r\nfunction StartBanner({scale, status, ...props}) {\r\n    return (\r\n        <Sprite\r\n            scale = {scale}\r\n            x={(props.app.renderer.screen.width - texture.baseTexture.width*scale)/2}\r\n            y={props.app.renderer.screen.height - texture.baseTexture.height*scale}\r\n            texture={texture}\r\n            visible={status === \"idle\" || status === \"finish\"}\r\n        >\r\n            <BannerHeader container = {texture}/>\r\n            <BannerButton container = {texture}/>\r\n        </Sprite>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        scale: state.sizes.scale,\r\n        status: state.currentGame.status,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(StartBanner);","import React from \"react\";\r\nimport {Sprite} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport {getPngName} from \"../../consts\";\r\n\r\n\r\n\r\nfunction CardSymbol({card, ...props}) {\r\n    const texture = PIXI.Texture.from(getPngName(card))\r\n\r\n    const [suit, setSuit] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n    const symbol = React.useRef();\r\n    // console.log(suit, card)\r\n\r\n    React.useEffect(()=> {\r\n            texture.on('update', () => {\r\n                setSuit(symbol.current);\r\n                // console.log(texture.baseTexture)\r\n                // console.log(texture.baseTexture.width, current.width)\r\n            });\r\n        }\r\n        ,[])\r\n    return (\r\n            <Sprite\r\n                ref={symbol}\r\n                pivot={[texture.baseTexture.width/2, texture.baseTexture.height/2]}\r\n                {...props}\r\n                texture={texture}\r\n            />\r\n\r\n    )\r\n}\r\n\r\nexport default CardSymbol;","import * as PIXI from \"pixi.js\";\r\nimport {CustomPIXIComponent} from \"react-pixi-fiber\";\r\n\r\nexport const drawRectangle = (x, y, width, height) => {\r\n    const g = new PIXI.Graphics();\r\n    g.clear();\r\n    g.beginFill();\r\n    g.drawRect(x, y, width, height);\r\n    g.endFill();\r\n    return g;\r\n};\r\n\r\nexport const drawBrush = ({x, y}, r=20, dragging = true ) => {\r\n    const g = new PIXI.Graphics()\r\n    g.beginFill(0x000000);\r\n    g.drawCircle(x, y, r)\r\n    g.endFill();\r\n    return g\r\n};\r\n\r\nexport const Mask = CustomPIXIComponent(\r\n    {\r\n        customDisplayObject: ({ draw }) => {\r\n            const container = new PIXI.Container();\r\n            container.mask = draw();\r\n            return container;\r\n        },\r\n        customApplyProps: (instance, oldProps, { draw }) => {\r\n            instance.mask = draw();\r\n        }\r\n    },\r\n    \"Mask\"\r\n);","import React from \"react\";\r\nimport {Sprite, Container} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPngName} from \"../../../consts\";\r\nimport CardSymbol from \"../CardSymbol\";\r\nimport {drawBrush, drawRectangle, Mask} from \"../../Mask\";\r\nimport {changeCardStatus} from \"../../../services/CurrentGame\";\r\n\r\nconst frame = getPngName(\"scratch_frame_big\");\r\nconst texture = PIXI.Texture.from(frame)\r\n\r\n\r\nfunction ScratchBig({width, height,card, open, container, scale, status, dispatch, ...props}) {\r\n    const [dragging, setDragging] = React.useState(false)\r\n    const [brush, setBrush] = React.useState(\r\n        drawRectangle(\r\n            0,\r\n            0,\r\n            width,\r\n            height\r\n        )\r\n\r\n    )\r\n\r\n    function pointerMove(event) {\r\n        if (dragging) {\r\n            dispatch({type: \"currentGame/statusCharacter\", payload: \"worry\"})\r\n            // brush.position.copyFrom(event.data.global);\r\n            // console.log(event.data.global, brush)\r\n            setBrush(drawBrush(event.data.global, 100*scale))\r\n            // props.app.renderer.render(brush, texture, false, null, false);\r\n        }\r\n    }\r\n\r\n    function pointerDown(event) {\r\n        setDragging(true);\r\n        pointerMove(event);\r\n    }\r\n\r\n    function pointerUp(event) {\r\n        setDragging(false);\r\n        dispatch({type: \"currentGame/statusCharacter\", payload: \"happy_bonus\"});\r\n        dispatch(changeCardStatus(\"bonus\", 0));\r\n        setBrush(drawRectangle(\r\n            0,\r\n            0,\r\n            width,\r\n            height\r\n        ));\r\n        setTimeout(()=> {\r\n                dispatch({type: \"currentGame/statusCharacter\", payload: \"idle\"})\r\n            }\r\n        ,1000)\r\n    }\r\n    return (<Container\r\n            // x={(container.width - texture.baseTexture.width*1.075)/2 }\r\n            // y={(container.height - texture.baseTexture.height*0.465)/2}\r\n            // width={texture.baseTexture.width}\r\n            // height={texture.baseTexture.height}\r\n            pivot={[texture.baseTexture.width*1.075/2, texture.baseTexture.height*0.465/2]}\r\n            {...props}\r\n        >\r\n            <CardSymbol\r\n                x={texture.baseTexture.width/2}\r\n                y = {texture.baseTexture.height/2}\r\n                card={card}\r\n                visible = {\"play\" === status || \"finish\" === status}\r\n            />\r\n                <Mask draw={()=>brush}\r\n                      visible = {!open}\r\n                >\r\n                    <Sprite\r\n                    interactive\r\n                    dragging ={dragging}\r\n                    pointerup={\"play\" === status ? pointerUp : () => {}}\r\n                    pointerdown={\"play\" === status ? pointerDown : () => {}}\r\n                    pointermove={\"play\" === status ? pointerMove : () => {}}\r\n                    texture={texture}\r\n                    visible = {!open}\r\n                    />\r\n                </Mask>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        width: state.sizes.widthBg,\r\n        height: state.sizes.heightBg,\r\n        scale: state.sizes.scale,\r\n        card: state.currentGame.bonusSet.set[0],\r\n        status: state.currentGame.status,\r\n        open: state.currentGame.open.bonus[0]\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(ScratchBig);","import React from \"react\";\r\nimport {Container, Sprite} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPngName} from \"../../../consts\";\r\nimport ScratchBig from \"./ScratchFrameBig\";\r\n\r\nconst bonus = getPngName(\"winner_frame\");\r\nconst texture = PIXI.Texture.from(bonus)\r\n\r\n\r\nfunction Bonus({width, height,card, status, ...props}) {\r\n    const [container, setContainer] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n    const wrapper = React.useRef();\r\n    React.useEffect(()=> {\r\n            setContainer(wrapper.current);\r\n        }\r\n        ,[])\r\n    return (\r\n    <Sprite\r\n        ref = {wrapper}\r\n        x={width * 0.89 - container.width }\r\n        y={(height*0.075)}\r\n        texture={texture}\r\n    >\r\n        <ScratchBig\r\n            x={(container.width)/2 }\r\n            y={(container.height)/2}\r\n        />\r\n    </Sprite>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        width: state.sizes.widthBg,\r\n        height: state.sizes.heightBg,\r\n        card: state.currentGame.bonusSet.set[0],\r\n        status: state.currentGame.status,\r\n\r\n\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Bonus);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {SpineAnimation} from \"../Spine\";\r\n\r\nfunction Character({app, widthBg, heightBg, status, statusCharacter}) {\r\n    const ref = React.useRef()\r\n    React.useEffect(()=>{\r\n        // console.log(ref.current);\r\n        ref.current.state.setAnimation(0, `red_${statusCharacter}_loop`, true)\r\n        }\r\n\r\n        ,[statusCharacter])\r\n    return status === \"download\" ? (\r\n        <SpineAnimation\r\n            ref={ref}\r\n            spine = {app.stage.getChildByName('spineCharacter')}\r\n            x ={widthBg * 0.32}\r\n            y = {heightBg*0.32}\r\n\r\n        />\r\n\r\n    ) : null;\r\n}\r\n\r\nCharacter.propTypes = {\r\n    app: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        widthBg: state.sizes.widthBg,\r\n        heightBg: state.sizes.heightBg,\r\n        statusCharacter: state.currentGame.statusCharacter,\r\n        status: state.sizes.status,\r\n\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Character);","import React from \"react\";\r\nimport {Sprite, Text, Container} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport {getPngName} from \"../../../../consts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst fontSize = 52;\r\nconst style = new PIXI.TextStyle({\r\n    fill: \"#f45b4e\",\r\n    fontFamily: \"DRAguSans-Black\",\r\n    fontSize: fontSize,\r\n\r\n});\r\n\r\n\r\nfunction BoardText({suit, status, ...props}) {\r\n    const texture = PIXI.Texture.from(getPngName(suit + \"_small\"))\r\n\r\n    const [current, setCurrent] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n    const [firstText, setText1] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n    const [secondText, setText2] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n    const [suitSymbol, setSymbol] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n\r\n    const wrapper = React.useRef();\r\n    const text1 = React.useRef();\r\n    const text2 = React.useRef();\r\n    const symbol = React.useRef();\r\n\r\n    React.useEffect(()=> {\r\n            setCurrent(wrapper.current);\r\n            setText1(text1.current);\r\n            setText2(text2.current);\r\n            texture.on('update', () => {\r\n                setSymbol(symbol.current);\r\n            });\r\n        }\r\n        ,[])\r\n\r\n    return (\r\n        <Container\r\n            pivot = {[0, current.height/2]}\r\n            ref = {wrapper}\r\n            visible = {\"play\" === status || \"finish\" === status}\r\n\r\n            {...props}\r\n        >\r\n            <Text\r\n                ref={text1}\r\n                style={ style}\r\n                pivot = {[0, firstText.height/2]}\r\n                y = {current.height /2}\r\n                text=\"MATCH THE WINNER\"\r\n            />\r\n            <Sprite\r\n                ref={symbol}\r\n                pivot = {[0, suitSymbol.height/2]}\r\n                x = {firstText.width + suitSymbol.width*0.15}\r\n                y = {current.height /2}\r\n                texture={texture}\r\n            />\r\n            <Text\r\n                ref={text2}\r\n                style={ style}\r\n                pivot = {[0, secondText.height/2]}\r\n                x = {firstText.width + suitSymbol.width*1.3}\r\n                y = {current.height /2}\r\n                text=\"AND WIN A PRIZE!\"\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        suit: state.currentGame.suit,\r\n        status: state.currentGame.status,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(BoardText);","import React from \"react\";\r\nimport {Sprite} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport {getPngName} from \"../../../../consts\";\r\nimport BoardText from \"./BoardText\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst frame = getPngName(\"frame_for_text\");\r\nconst texture = PIXI.Texture.from(frame)\r\n\r\nfunction BoardHeader({status, ...props}) {\r\n    const [current, setCurrent] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n    const wrapper = React.useRef();\r\n    React.useEffect(()=> {\r\n            setCurrent(wrapper.current);\r\n        }\r\n        ,[])\r\n\r\n    return (\r\n            <Sprite\r\n                ref = {wrapper}\r\n                texture={texture}\r\n                pivot = {[current.width / 2, current.height/2]}\r\n                {...props}\r\n            >\r\n                <BoardText\r\n                    x = {current.width*0.035}\r\n                    y = {current.height /2}\r\n                />\r\n            </Sprite>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        status: state.currentGame.status,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(BoardHeader);\r\n","import React from \"react\";\r\nimport {Sprite, Container} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPngName} from \"../../../../consts\";\r\nimport CardSymbol from \"../../CardSymbol\";\r\nimport {drawBrush, drawRectangle, Mask} from \"../../../Mask\";\r\nimport {changeCardStatus} from \"../../../../services/CurrentGame\";\r\n\r\nconst scratch = getPngName(\"scratch_frame\");\r\nconst texture = PIXI.Texture.from(scratch)\r\n\r\nconst frame = getPngName(\"frame\");\r\nconst textureBg = PIXI.Texture.from(frame)\r\n\r\nfunction ScratchFrame({width, height, open, card, number, suit, scale, status, dispatch, ...props}) {\r\n    const [dragging, setDragging] = React.useState(false)\r\n    const [brush, setBrush] = React.useState(\r\n        drawRectangle(\r\n            0,\r\n            0,\r\n            width,\r\n            height\r\n        )\r\n\r\n    )\r\n    const [current, setCurrent] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n    const wrapper = React.useRef()\r\n\r\n    const [bg, setBg] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n    const frame = React.useRef()\r\n    React.useEffect(()=> {\r\n            if (wrapper.current && wrapper.current.width && wrapper.current.width !== current.width) {\r\n                setCurrent(wrapper.current);\r\n            }\r\n            setBg(frame.current)\r\n        }\r\n        ,[wrapper.current, frame.current])\r\n\r\n    function pointerMove(event) {\r\n        if (dragging) {\r\n            dispatch({type: \"currentGame/statusCharacter\", payload: \"worry\"})\r\n            // brush.position.copyFrom(event.data.global);\r\n            // console.log(event.data.global, brush)\r\n            setBrush(drawBrush(event.data.global, 100*scale))\r\n            // props.app.renderer.render(brush, texture, false, null, false);\r\n        }\r\n    }\r\n\r\n    function pointerDown(event) {\r\n        setDragging(true);\r\n        pointerMove(event);\r\n    }\r\n\r\n    function pointerUp(event) {\r\n        setDragging(false);\r\n        dispatch({\r\n            type: \"currentGame/statusCharacter\",\r\n            payload: card === suit ? \"happy_card\" : \"disappointed\"\r\n        });\r\n        dispatch(changeCardStatus(\"set\", number));\r\n        setBrush(drawRectangle(\r\n            0,\r\n            0,\r\n            width,\r\n            height\r\n        ));\r\n        setTimeout(()=> {\r\n                dispatch({type: \"currentGame/statusCharacter\", payload: \"idle\"})\r\n            }\r\n            ,1000)\r\n    }\r\n    return (<Container\r\n            ref={wrapper}\r\n            pivot = {[texture.baseTexture.width/2, texture.baseTexture.height*0.65]}\r\n            x = {(number%3 -1)*(texture.baseTexture.width*1.2)}\r\n            y = {(Math.floor(number/3))*(texture.baseTexture.height*1.2)}\r\n\r\n        >\r\n        <Sprite\r\n            ref = {frame}\r\n            pivot={[bg.width/2, bg.height/2]}\r\n            texture={textureBg}\r\n            x={current.width/2}\r\n            y = {current.height/2}\r\n        >\r\n                <CardSymbol\r\n                    x={bg.width / 2}\r\n                    y={bg.height / 2}\r\n                    card={card}\r\n                    visible = {status !== \"idle\"}\r\n                />\r\n        </Sprite>\r\n                <Mask draw={()=>brush}\r\n                      visible={!open[number]}\r\n                >\r\n                    <Sprite\r\n                        interactive\r\n                        dragging ={dragging}\r\n                        pointerup={\"play\" === status ? pointerUp : () => {}}\r\n                        pointerdown={\"play\" === status ? pointerDown : () => {}}\r\n                        pointermove={\"play\" === status ? pointerMove : () => {}}\r\n                        // x={(container.width - texture.baseTexture.width*1.075)/2 }\r\n                        // y={(container.height - texture.baseTexture.height*0.465)/2}\r\n                        texture={texture}\r\n                        visible={!open[number]}\r\n                    />\r\n                </Mask>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        width: state.sizes.widthBg,\r\n        height: state.sizes.heightBg,\r\n        scale: state.sizes.scale,\r\n        suit: state.currentGame.suit,\r\n        status: state.currentGame.status,\r\n        open: state.currentGame.open.set\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(ScratchFrame);","import React from \"react\";\r\nimport {Container} from \"react-pixi-fiber\";\r\nimport {connect} from \"react-redux\";\r\nimport ScratchFrame from \"./ScratchFrame\";\r\n\r\n\r\nfunction Set({set, ...props}) {\r\n\r\n    const [current, setCurrent] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n\r\n    const wrapper = React.useRef();\r\n\r\n\r\n    React.useEffect(()=> {\r\n        // console.log(wrapper.current.width)\r\n            if (wrapper.current && wrapper.current.width && wrapper.current.width !== current.width) {\r\n                setCurrent(wrapper.current);\r\n            }\r\n        }\r\n        ,[wrapper.current])\r\n\r\n    return (\r\n        <Container\r\n            pivot = {[0, current.height/2]}\r\n            ref = {wrapper}\r\n            {...props}\r\n        >\r\n            {set.map((card, index) => (\r\n                <ScratchFrame\r\n                    key = {index}\r\n                    card={card}\r\n                    number={index}\r\n                />\r\n\r\n            ))}\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        set: state.currentGame.mainSet.set,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Set);","import React from \"react\";\r\nimport {Container} from \"react-pixi-fiber\";\r\nimport { connect } from \"react-redux\";\r\nimport BoardHeader from \"./BoardHeader/BoardHeader\";\r\nimport Set from \"./Set/Set\";\r\n\r\n\r\nfunction PlayingBoard({width, height, ...props}) {\r\n    const [container, setContainer] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n\r\n    const wrapper = React.useRef();\r\n\r\n    React.useEffect(()=> {\r\n            if (wrapper.current && wrapper.current.width && wrapper.current.width !== container.width) {\r\n                setContainer(wrapper.current);\r\n            }\r\n        }\r\n        ,[wrapper.current])\r\n    return (\r\n        <Container\r\n            ref = {wrapper}\r\n            pivot = {[container.width / 2, 0]}\r\n            x={(width)/2}\r\n            y={(height*1.145)/2}\r\n        >\r\n            <BoardHeader\r\n                x={(container.width)/2}\r\n            />\r\n            <Set\r\n                x={(container.width)/2}\r\n                y = {container.height}\r\n            />\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        width: state.sizes.widthBg,\r\n        height: state.sizes.heightBg,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(PlayingBoard);","import React from \"react\";\r\nimport {Sprite} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst header = \"/assets/magic_forest_win_up_to_100.png\";\r\nconst texture = PIXI.Texture.from(header)\r\n\r\n\r\nfunction GameHeader({width, height, ...props}) {\r\n    const [headerWidth, setX] = React.useState(0);\r\n    const wrapper = React.useRef();\r\n    React.useEffect(()=> {\r\n            setX(wrapper.current.width);\r\n        }\r\n        ,[])\r\n    return <Sprite\r\n        ref = {wrapper}\r\n        x={(width - headerWidth)/2}\r\n        y={(height*0.02)}\r\n        texture={texture}\r\n    />\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        width: state.sizes.widthBg,\r\n        height: state.sizes.heightBg,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(GameHeader);","import React from \"react\";\r\nimport {Text} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\n\r\nconst fontSize = 116;\r\nconst style = new PIXI.TextStyle({\r\n    fill: \"#f45b4e\",\r\n    fontFamily: \"DRAguSans-Black\",\r\n    fontSize: fontSize\r\n});\r\n\r\nfunction WinText(props) {\r\n    const [current, setCurrent] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n    const wrapper = React.useRef()\r\n    React.useEffect(()=> {\r\n            setCurrent(wrapper.current);\r\n        }\r\n        ,[])\r\n\r\n    return (\r\n            <Text\r\n                ref = {wrapper}\r\n                pivot={[current.width/2, 0]}\r\n                style={ style}\r\n                text=\"YOU WIN\"\r\n                {...props}\r\n            />\r\n    );\r\n}\r\n\r\nexport default WinText;\r\n","import React from \"react\";\r\nimport {Sprite} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport {getPngName} from \"../../consts\";\r\n\r\nfunction CurrencySymbol({name, ...props}) {\r\n    const textureDollar = PIXI.Texture.from(getPngName(name))\r\n\r\n    const [current, setCurrent] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n\r\n    const wrapper = React.useRef();\r\n\r\n\r\n    React.useEffect(()=> {\r\n            textureDollar.on('update', () => {\r\n                setCurrent(wrapper.current);\r\n            });\r\n        }\r\n        ,[wrapper.current])\r\n    return (\r\n        <Sprite\r\n            ref = {wrapper}\r\n            {...props}\r\n            texture={textureDollar}\r\n            pivot = {[-current.width*0.2, current.height/2]}\r\n        />\r\n    );\r\n}\r\n\r\nexport default CurrencySymbol","import React from \"react\";\r\nimport {Container, Text} from \"react-pixi-fiber\";\r\nimport {connect} from \"react-redux\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport CurrencySymbol from \"./CurrencySymbol\";\r\n\r\nconst fontSize = 126;\r\nconst style = new PIXI.TextStyle({\r\n    fill: \"#311d1f\",\r\n    fontFamily: \"DRAguSans-Black\",\r\n    fontSize: fontSize\r\n});\r\n\r\n\r\nfunction SetValues({bonusWin, setWin, w, ...props}) {\r\n    const countWin = (wins) => {\r\n        const finalWin = {};\r\n        for (let win of wins) {\r\n            for (let [currency, value] of Object.entries(win)) {\r\n                if (value > 0) {\r\n                    if (finalWin[currency]) {\r\n                        finalWin[currency] += value\r\n                    }\r\n                    else {\r\n                        finalWin[currency] = value\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return finalWin\r\n    }\r\n\r\n    const wins = countWin([bonusWin, setWin]);\r\n\r\n\r\n    const [current, setCurrent] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n\r\n    const [dollar, setDollar] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n    const [coin, setCoin] = React.useState({\r\n        width: 0,\r\n        height: 0\r\n    });\r\n\r\n    const wrapper = React.useRef();\r\n    const currency1 = React.useRef();\r\n    const currency2 = React.useRef();\r\n\r\n    React.useEffect(()=> {\r\n            if (wrapper.current) {\r\n                setCurrent(wrapper.current);\r\n            }\r\n            if (currency1.current) {\r\n                setDollar(currency1.current);\r\n            }\r\n            if (currency2.current) {\r\n                setCoin(currency2.current);\r\n            }\r\n        }\r\n        ,[wrapper.current, currency1.current, currency2.current])\r\n\r\n    return (\r\n        <Container\r\n            pivot = {[current.width/2, 0]}\r\n            ref = {wrapper}\r\n            {...props}\r\n        >\r\n                <Text\r\n                    ref = {currency1}\r\n                    pivot={[(dollar.width)/2, 0]}\r\n                    style={ style}\r\n                    text={wins.dollar || 0}\r\n                    x = {0}\r\n                    visible = {wins.dollar>0}\r\n                >\r\n                    <CurrencySymbol\r\n                        x={dollar.width}\r\n                        y={dollar.height / 2}\r\n                        name={\"dollar_icon\"}\r\n                    />\r\n                </Text>\r\n\r\n                <Text\r\n                    ref = {currency2}\r\n                    pivot={[(coin.width)/2, 0]}\r\n                    style={ style}\r\n                    text={wins.coin || 0}\r\n                    x = {dollar.width + (wins.dollar ? w*2.4 : 0)}\r\n                    visible = {wins.coin>0}\r\n\r\n                >\r\n                    <CurrencySymbol\r\n                        x={coin.width}\r\n                        y={coin.height / 2}\r\n                        name={\"coin_icon_big\"}\r\n                    />\r\n                </Text>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        bonusWin: state.currentGame.bonusSet.win,\r\n        setWin: state.currentGame.mainSet.win,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(SetValues);","import React from \"react\";\r\nimport {Sprite} from \"react-pixi-fiber\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPngName} from \"../../consts\";\r\nimport WinText from \"./WinText\";\r\nimport SetValues from \"./SetValues\";\r\n\r\n\r\nconst banner = getPngName(\"frame1\");\r\nconst texture = PIXI.Texture.from(banner);\r\n\r\nfunction WinBanner({scale, app, status}) {\r\n    const t = PIXI.Texture.from(getPngName(\"dollar_icon\"))\r\n    const [w, setW] = React.useState(0)\r\n\r\n    React.useEffect(()=> {\r\n            t.on('update', () => {\r\n                setW(t.baseTexture.width);\r\n            });\r\n        }\r\n        ,[])\r\n    return (\r\n        <Sprite\r\n            scale = {scale}\r\n            pivot={[texture.baseTexture.width/2, 0]}\r\n            x={(app.renderer.screen.width)/2}\r\n            y={app.renderer.screen.height*0.12}\r\n            texture={texture}\r\n            visible = {status === \"finish\"}\r\n        >\r\n            <WinText\r\n                x={texture.baseTexture.width/2}\r\n                y={texture.baseTexture.height*0.1}\r\n            />\r\n            <SetValues\r\n                x={(texture.baseTexture.width)/2}\r\n                y = {texture.baseTexture.height/2}\r\n                tDollar = {t}\r\n                visible = {w}\r\n                w = {w}\r\n            />\r\n        </Sprite>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        scale: state.sizes.scale,\r\n        status: state.currentGame.status,\r\n\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(WinBanner);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Background from \"./Game/Background\";\r\nimport { connect } from \"react-redux\";\r\nimport StartBanner from \"./StartBanner/StartBanner\";\r\nimport Bonus from \"./Game/Bonus/Bonus\";\r\nimport Character from \"./Game/Character\";\r\nimport {Mask, drawRectangle} from \"./Mask\";\r\nimport PlayingBoard from \"./Game/PlayingBoard/PlayingBoard\";\r\nimport GameHeader from \"./Game/GameHeader\";\r\nimport WinBanner from \"./WinBanner/WinBanner\";\r\n\r\n\r\nfunction Game({status, scale, width, height, spineStatus, ...props}) {\r\n\r\n    return spineStatus === \"download\" ? (\r\n        <Mask draw={() => drawRectangle(\r\n            ((props.app.renderer.screen.width - width*scale)/2) + width*scale*0.11,\r\n            0,\r\n            width*scale*0.78,\r\n            height\r\n        )}>\r\n            <Background {...props}>\r\n                <Bonus/>\r\n                <Character {...props}/>\r\n                <GameHeader/>\r\n                <PlayingBoard/>\r\n            </Background>\r\n            <WinBanner {...props}/>\r\n            <StartBanner {...props}/>\r\n        </Mask>\r\n\r\n    ) : null;\r\n}\r\n\r\nGame.propTypes = {\r\n    app: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    return {\r\n        status: state.currentGame.status,\r\n        scale: state.sizes.scale,\r\n        width: state.sizes.widthBg,\r\n        height: state.sizes.heightBg,\r\n        spineStatus: state.sizes.status,\r\n\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Game);","import React from 'react';\nimport { Stage, AppContext } from \"react-pixi-fiber\";\nimport SpineCharacter from \"./components/SpineCharacter\";\nimport Game from \"./components/Game\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/configure-store\";\n\n\nconst height = window.innerHeight;\nconst width = window.innerWidth;\nconst OPTIONS = {\n  backgroundColor: 0x000000,\n  resolution: window.devicePixelRatio || 1,\n  // autoStart:false,\n  height: height,\n  width: width\n};\n\nconst Main = ({app, ...props}) => {\n    const [pending, setPending] = React.useState(true);\n\n    React.useEffect(()=> {\n        // app.loader\n        //     .add('spineCharacter', '/assets/char_spine_v5/Red.json')\n        setTimeout(()=> {\n                setPending(false)\n            }\n            ,3000)\n    },[])\n\n    return pending ?\n        (<SpineCharacter app={app} {...props}/>\n        ): (\n            <Game app={app} {...props}/>\n        )\n\n}\n\nfunction App() {\n    const [pending, setPending] = React.useState(true);\n\n    React.useEffect(()=> {\n\n        setTimeout(()=> {\n            setPending(false)\n            }\n            ,3000)\n    },[])\n\n  return (\n\n      <Stage options={OPTIONS}>\n          <Provider store={store}>\n          { (\n              <AppContext.Consumer>\n              {app => (<Main app={app}/>)}\n          </AppContext.Consumer>\n          )\n          }\n          </Provider>\n      </Stage>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n\n          <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}